service: mediocre-saga-sample 

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs6.10

  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "lambda:InvokeFunction"
      Resource: "arn:aws:lambda:*:*:*"
    - Effect: "Allow"
      Action: 
        - "states:ListStateMachines"
        - "states:StartExecution"
        - "states:GetExecutionHistory"
      Resource: "arn:aws:states:*:*:*"

functions:
  get-forecast:
    handler: functions/get-forecast.handler

  get-flight:
    handler: functions/get-flight.handler

  get-departure:
    handler: functions/get-departure.handler
    events:
      - http:
          path: /getdeparture/
          method: get
          request:
            parameters:
              querystrings:
                id: true
                date: true

  get-departure-steps-fn:
    handler: functions/get-departure-steps-fn.handler
    events:
      - http:
          path: /getdeparture-step/
          method: get
          request:
            parameters:
              querystrings:
                id: true
                date: true

  get-departure-steps-fn-status:
    handler: functions/get-status.handler
    events:
      - http:
          path: /getdeparture-step/status
          method: get
          request:
            parameters:
              querystrings:
                id: true

stepFunctions:
  stateMachines: 
    GetDepartureMachine:
      definition:
        Comment: "Get Departure information"
        StartAt: Parallel
        States:
          Parallel:
            Type: Parallel
            Next: FinalState
            Branches:
              - StartAt: GetFlight
                States:
                  GetFlight:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-get-flight
                    End: true
              - StartAt: GetForecast
                States:
                  GetForecast:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-get-forecast
                    End: true
          FinalState:
            Type: Pass
            End: true

